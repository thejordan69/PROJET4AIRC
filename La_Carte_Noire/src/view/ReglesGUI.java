/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.JButton;
import javax.swing.JFrame;
import launcher.LauncherGUI;

/**
 *
 * @author Frederic
 */
public class ReglesGUI extends JFrame {

    /**
     * Creates new form RegleGUI
     */
    public ReglesGUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        TXT_Titre = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        TXT_Regle = new javax.swing.JTextArea();
        BT_Retour = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        TXT_Titre.setEditable(false);
        TXT_Titre.setText("La Carte Noire - Règles du jeu");

        TXT_Regle.setEditable(false);
        TXT_Regle.setColumns(20);
        TXT_Regle.setLineWrap(true);
        TXT_Regle.setRows(5);
        TXT_Regle.setText("Nombre de joueurs : 2 à 4 joueurs\n\nBut du jeu : Avoir le plus de jeton(s) de couleur\n\nDéroulement du jeu :\n- Déplacez la carte noire verticalement ou horizontalement pour prendre une carte\n- Choisissez une carte à recouvrir, saisissez-vous-en ainsi que de toutes les cartes survolées de même couleur\n- A la fin de votre tour, si vous possédez un nombre de cartes d’une même couleur supérieur ou égal à celui de vos adversaires, prenez le jeton de couleur correspondant\n- A la fin de la partie, celui qui possède le plus de jeton(s) gagne, en cas d’égalité il s’agit du joueur qui a en outre le plus de cartes dans une même couleur\n\nFin du jeu : La partie est terminée lorsqu’il ne reste plus de cartes de couleur ou que la carte noire ne peut plus survoler de carte horizontalement ni verticalement\n\n\nJeu par équipe (4 joueurs obligatoire,  2 vs 2) :\nLe déroulement du jeu est identique à une partie classique, cependant à la fin de la partie, on additionne les jetons des deux joueurs de chaque équipe\n");
        TXT_Regle.setWrapStyleWord(true);
        jScrollPane1.setViewportView(TXT_Regle);

        BT_Retour.setText("Retour");
        BT_Retour.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BT_RetourActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 632, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(237, 237, 237)
                        .addComponent(TXT_Titre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(BT_Retour)
                .addGap(278, 278, 278))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(TXT_Titre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 357, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(BT_Retour)
                .addGap(0, 24, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BT_RetourActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BT_RetourActionPerformed
        // TODO add your handling code here:
        this.dispose();
        MenuGUI menu = new MenuGUI();
    }//GEN-LAST:event_BT_RetourActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        ReglesGUI regle = new ReglesGUI();
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ReglesGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ReglesGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ReglesGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ReglesGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ReglesGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BT_Retour;
    private javax.swing.JTextArea TXT_Regle;
    private javax.swing.JTextField TXT_Titre;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
